image: Visual Studio 2019

environment:
  matrix:
  - TARGET: VS2019
    platform: Win32
    configuration: Release
  - TARGET: mingw
  - TARGET: cygwin-mingw32-cross
  - TARGET: msys2-mingw32-cross
  - TARGET: msys2-mingw32-native


before_build:
- cmd: git config user.email "tester@localhost" &&
    git config user.name "Tester" &&
    git remote add upstream http://git.ghostscript.com/mupdf.git &&
    git fetch upstream master &&
    git merge upstream/master -m "Test upstream merge" &&
    git submodule update --init
- cmd: C:\msys64\usr\bin\bash -e -l -c "cd /c/projects/mupdf &&
    make version"

for:
- 
    matrix:
        only: 
            - TARGET: VS2019
    build:          
        project: platform\win32\mupdf.sln
    after_build: 
        cmd: dir C:\projects\mupdf\platform\win32\Release\*.exe
- 
    matrix:
        only: 
            - TARGET: mingw
    install:
    - cmd: C:\MinGW\bin\mingw-get update &&
        C:\MinGW\bin\mingw-get upgrade --recursive msys-base mingw32-base gcc-c++-bin
    build_script:
    - cmd: C:\MinGW\msys\1.0\bin\bash -e -l -c "cd /c/projects/mupdf &&
        make OUT=/home/appveyor/mupdf/release
        XLIBS+=-static-libgcc
        XCFLAGS+=-DHAVE_MKGMTIME"
- 
    matrix:
        only: 
            - TARGET: cygwin-mingw32-cross
    install:
    - cmd: curl -fsS https://cygwin.com/setup-x86.exe > C:\cygwin\setup-x86.exe &&
        C:\cygwin\setup-x86.exe -qnNd -l C:\cygwin\var\cache\setup -R c:\cygwin
            -P gcc-core
            -P binutils
            -P w32api-headers
            -P w32api-runtime
            -P mingw64-i686-gcc-core
            -P mingw64-i686-binutils
            -P mingw64-i686-headers
            -P mingw64-i686-runtime
            -P mingw64-i686-gcc-g++
    build_script:
    - cmd: C:\cygwin\bin\bash -e -l -c "cd /cygdrive/c/projects/mupdf &&
        make OUT=/home/appveyor/mupdf/release
        OS=mingw32-cross
        XLIBS+=-static-libgcc
        XCFLAGS+=-DHAVE_MKGMTIME"
- 
    matrix:
        only: 
            - TARGET: msys2-mingw32-cross
    install:
    - cmd: C:\msys64\usr\bin\bash -e -l -c "pacman --noconfirm --needed -S
            bash
            pacman
            pacman-mirrors
            msys2-runtime" &&
        C:\msys64\usr\bin\bash -e -l -c "pacman --noconfirm --needed -S 
            make
            mingw-w64-cross-toolchain
            p7zip"
    build_script:
    - cmd: C:\msys64\usr\bin\bash -e -l -c "cd /c/projects/mupdf &&
        make OUT=/home/appveyor/mupdf/release
        OS=mingw32-cross
        XLIBS+=-static-libgcc
        XCFLAGS+=-DHAVE_MKGMTIME"
- 
    matrix:
        only: 
            - TARGET: msys2-mingw32-native
    install:
    - cmd: C:\msys64\usr\bin\bash -e -l -c "pacman --noconfirm --needed -S
            bash
            pacman
            pacman-mirrors
            msys2-runtime" &&
        C:\msys64\usr\bin\bash -e -l -c "pacman --noconfirm --needed -S 
            make
            mingw-w64-i686-toolchain
            p7zip"
    build_script:
    - cmd: C:\msys64\usr\bin\bash -e -l -c "PATH=/mingw32/bin:$PATH &&
            cd /c/projects/mupdf &&
            make OUT=/home/appveyor/mupdf/release
            XLIBS+=-static-libgcc
            XCFLAGS+=-DHAVE_MKGMTIME
            2>&1 | tee -a mupdf-$(git describe --tags)-build.log"
    after_build:
    - cmd: C:\msys64\usr\bin\bash -e -l -c "mkdir /c/projects/mupdf/mupdf-mingw &&
            cp /home/appveyor/mupdf/release/mupdf-w32.exe
                /home/appveyor/mupdf/release/mupdf-gl.exe
                /home/appveyor/mupdf/release/mutool.exe
                /c/projects/mupdf/mupdf-mingw/ &&
            cp /c/projects/mupdf/README
                /c/projects/mupdf/mupdf-mingw/README.txt &&
            cp /c/projects/mupdf/CHANGES
                /c/projects/mupdf/mupdf-mingw/CHANGES.txt &&
            cp /c/projects/mupdf/COPYING
                /c/projects/mupdf/mupdf-mingw/COPYING.txt &&
            cd /c/projects/mupdf/mupdf-mingw &&
            sed -i -e 's/\r*$/\r/' *.txt &&
            cd .. &&
            7z a mupdf-$(git describe --tags).zip mupdf-mingw &&
            scripts/archive.sh &&
            appveyor PushArtifact mupdf-$(git describe --tags).zip &&
            appveyor PushArtifact mupdf-$(git describe --tags)-source.tar.gz &&
            appveyor PushArtifact mupdf-$(git describe --tags)-source.tar.xz &&
            appveyor PushArtifact mupdf-$(git describe --tags)-build.log"
